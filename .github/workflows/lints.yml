name: Linting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]

    - name: Run Black
      run: black --check src

    - name: Run MyPy
      run: mypy src

    - name: Run Bandit
      run: bandit -r src

    - name: Check for any failures
      if: failure()
      run: exit 1

  mark-as-ready:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'pull_request'
    steps:
    - name: Set PR as ready for review
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          const pr = context.issue.number;
          github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr,
            draft: false
          });

    - name: Revert PR to draft if linting fails
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const pr = context.issue.number;
          github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr,
            draft: true
          });
